<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>ProductCRUD-2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ProductCRUD-2</name>
	<packaging>war</packaging>
	<description>Demo project for Spring Boot CRUD</description>
	<properties>
		<java.version>1.8</java.version>
		<!-- SONARQUBE PROPERTIES -->
		<!-- test result directory value -->
		<project.test.result.directory>${project.build.directory}/test-results</project.test.result.directory>
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<sonar.scm.provider>git</sonar.scm.provider>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<!-- coverage report is processed via the xml report -->
		<sonar.coverage.jacoco.xmlReportPaths>${project.test.result.directory}/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<!-- exclude any unrelated folder or file -->
		<sonar.exclusions>
			**/*.xml
		</sonar.exclusions>
		<!-- exclude any code unrealted to coverage -->
		<sonar.coverage.exclusions>
			ProductCrud1Application.java
		</sonar.coverage.exclusions>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 1. Sonar scanner for maven project , performs code quality measurement 
				locally and sends report to the configured sonarqube server -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<!--2. used to do code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<!-- to be able to pass the measurement result to surefire plugin -->
				<executions>
					<execution>
						<id>pre-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- configure the report file destination path -->
							<propertyName>jacocoArgLine</propertyName>
							<destFile>${project.test.result.directory}/jacoco/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- configure report creation this makes sure that unit tests are 
								included in the coverage -->
							<dataFile>${project.test.result.directory}/jacoco/jacoco.exec</dataFile>
							<outputDirectory>${project.test.result.directory}/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 3. maven runs tests with this plugin and generates reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- pass the jacoco property name here so surefire can process the 
						report generated by jacoco -->
					<argLine>${jacocoArgLine}</argLine>
					<!-- path where surefire reports will be created -->
					<reportsDirectory>${project.test.result.directory}/surefire</reportsDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
